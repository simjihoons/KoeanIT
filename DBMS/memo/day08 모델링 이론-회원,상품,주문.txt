모델링
	추상적인 주제를 DB에 맞게 설계하는 것
	목적 : 조회를 편하고 빠르게 하자...

1. 요구사항 분석(클라이언트가 이렇게 하고싶다! 하는것을 분석)
	회원,주문,상품 : 3가지를 관리하고자 한다.

2. 개념적 설계(개념 모델링)
	주문(주문에서 회원과 상품을 둘다 써야한다. 누가 무엇을 주문했나.)
	=>관계가 형성되있어야 한다. RDBMS
	회원		주문		상품
----------------------------------------------------------------
	ID		주문번호		상품번호
----------------------------------------------------------------
	PW		주문일		상품명
	이름		ID		가격
	주소		상품번호		재고량
	이메일		
	생일		

3. 논리적 설계(논리 모델링)
	조금더 자세하게(PK , FK 정하기 등)
	여기선 주문방식을 전부 무통장 입금이라 가정

	회원		주문		상품		결제정보
---------------------------------------------------------------------------------------------------
	ID(PK)		주문번호(PK)	상품번호(PK)	계좌번호(PK)
							은행명(PK)
---------------------------------------------------------------------------------------------------
	PW		주문일		상품명		예금주
	이름		ID(FK)		가격		CVC
	주소		상품번호(FK)	재고량
	이메일		계좌번호(FK)
	생일

4. 물리적 설계(물리 모델링)
	컬럼 명, 타입 등을 생각

	USER
	USER_ID VARCHAR2(100)
-------------------------------------------------------------
	USER_PW : VARCHAR2(100)
	USER_NAME : VARCHAR2(200)
	USER_ADDRESS : VARCHAR2(300)
	USER_EMAIL : VARCHAR2(300)
	USER_BIRTH : DATE


	PRODUCT
	PRODUCT_NUM : NUMBER
--------------------------------------------------------------
	PRODUCT_NAME : VARCHAR2(300)
	PRODUCT_PRICE : NUMBER
	PRODUCT_COUNT : NUMBER
	

	ORDER
	ORDER_NUM : NUMBER
-------------------------------------------------------------
	ORDER_DATE : DATE
	USER_ID VARCHAR2(100)
	PRODUCT_NUM : NUMBER

5. 구현
------------------------------------------------------------
1. 요구사항 
	꽃 테이블과 화분 테이블 필요하고 , 꽃을 구매할때 화분도 같이 구매한다.
	꽃은 이름 색 가격
	화분 제품번호 색 모양 꽃이름 이 있다.

2. 개념 모델링

	꽃		화분
	---------------------------
	이름		제품번호
	색		색
	가격		모양
			꽃 이름

3. 논리 모델링
	
	꽃		화분
	--------------------------------
	이름(PK)		제품번호(PK)
	--------------------------------
	색		색
	가격		모양
			꽃 이름(FK)


4. 물리적 설계
	
	FLOWER						POT
	FLOWER_NAME : VARCHAR2(20)			POT_ID VARCHAR2(100)
	---------------------------------------------------------------------------------------------
	COLOR : VARCHAR2(200)				POT_COLOR VARCHAR2(100)
	PRICE : NUMBER					SHAPE : VARCHAR2(100)
	CONSTRAINT PRIMARY KEY(FLOWER_NAME)		FLOWER_NAME : VARCHAR2(20)
							CONSTRAINT FOREIGN KEY(FLOWER_NAME) REFERENCES FLOWER(FLOWER_NAME)


5. 구현












