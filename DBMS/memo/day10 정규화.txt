정규화
	삽입/수정/삭제의 이상현상을 제거
	데이터의 중복 최소화
	대부분 3차 정규화 까지만 진행

1차 정규화(1NF)
	하나의 컬럼에 값이 1개씩만 있어야 한다.
	반복적인 컬럼 값이 나타나는 경우
	
	상품명
	바지1,바지2,바지3  ==>위반
	*검색이 힘들다.(바지2를 검색하고 싶을때 바지를 다 가져와서 2만 추출해야함)

-정규화 진행
	상품명
	바지1	
	바지2
	바지3

2차 정규화(2NF)
	테이블의 모든 컬럼이 서로 관계가 있어야 한다.
	모든 컬럼이 서로 관계가 없는 경우

	USER
	이름	나이	상품명
	홍길동	10	바지
	이순신	11	자켓

-정규화 진행
	USER
	이름	나이
	홍길동	10
	이순신	11

	PRODUCT
	나이	상품명
	10	바지
	11	자켓

3차 정규화(3NF)
	

	이름	시	구	동	우편번호	
	홍길동	남양주	화도읍	구암리	12345
	*우편번호만 알아도 시구동은 알수있음
	*중복된 데이터가 생길 가능성이 있다.

-정규화 진행
	이름	우편번호
	홍길동	12345

	우편번호	
	우편번호	시	구	동	
	1234	남양주	화도읍	구암리
		
------------------------------------------------------------------------------------------
데이터베이스에서 정규화가 필요한 이유
	데이터베이스를 잘못 설계하면 불필요한 데이터 중복으로 인해
	공간이 낭비된다. 이러한 현상을 이상(Anomaly)라고 한다.
	회원 번호와 프로젝트 코드 두 컬럼의 조합키(PK가 2개 이상)로 설정되어 있는 테이블이고
	한 사람은 하나의 부서만 가질 수 있다.

	회원번호		이름	부서	프로젝트코드	급여	부서별명수
	21060601	홍길동	개발팀	ABC001		3000	4
	21060601	홍길동	개발팀	EDS111		4000	4
	21060601	홍길동	개발팀	NFK332		5000	4
	21060505	신사임당	기획팀	SLD330		6000	2
	21060507	세종	디자인팀	DKFM33		7000	3

이상현상의 종류
	-삽입 이상
		새 데이터를 삽입하기 위해 불필요한 데이터도 삽입해야하는 문제
		담당 프로젝트가 정해지지 않은 사원이 있다면
		프로젝트 코드에 NULL을 작성할 수 없으므로, 이 사원은 테이블에 추가될 수 없다.
		따라서 '미정'이라는 프로젝트 코드를 따로 만들어서 삽입해야한다.
		*삽입 이상을 없애려면?정규화를 하자

	-갱신 이상
		중복되는 행 중, 일부만 변경하여 데이터가 불일치하게 되는 모순의 문제
		한 명의 사원은 반드시 하나의 부서에만 속할 수 있다.
		만약 "홍길동"이 보안팀으로 부서를 옮길시 3개 모두 갱신해주지 안흔다면
		개발팀인지 보안팀인지 알 수 없다.
		이러한 현상을 갱신이상이라한다

	-삭제 이상
		행을 삭제하면 꼭 필요한 데이터까지 함께 삭제되는 문제
		이순신이 담당한 프로젝트를 박살내서 드랍된다면 이순신이라는 행을 모두 삭제해야한다.
		따라서 프로젝트에서 드랍되면 정보를 모두 드랍하게 된다.

	=> 이러한 이상 현상이 발생하는 이유는 테이블이 정규화가 되어 있지 않기 대문이다.
	     정규화를 진행하기 위해서는 각 컬럼간의 관련성을 파악해야하고, 이 관련성을
	     "함수적 종속성"(Functional Dependecy)이라고 한다.
                  따라서 하나의 테이블에서는 하나의 함수적 종속성만 존재하도록 정규화를 한다.

----------------------------------------------------------------------------------------------------------------------------
NULL
	정의되지 않은 값
	빈 값 대신 미정 값을 부여할 때 사용(PK 불가능 , FK는 가능)

NOT NULL 제약 조건
	ALTER TABLE 테이블명 MODIFY 컬럼명 NOT NULL

제약조건 삭제
	ALTER TABLE 테이블명 DROP CONSTRAINT 제약조건 이름;

조건식
	컬럼명 IS NULL : 컬럼 값이 NULL이면 참
	컬럼명 IS NOT NULL : 컬럼 값이 NULL이 아니면 참

NULL 값을 다른 값으로 변경
	NVL() : NULL 값 대신 다른 값으로 변경 후 검색
	NVL2() : NULL일 때의 값, NULL이 아닐 때의 값을 각각 설정








		