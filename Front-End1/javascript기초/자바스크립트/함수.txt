사용자 정의 함수(function)
-하나의 특별한 목적의 작업을 수행하도록 설계된 독립적인 블록을 의미합니다.
-함수는 필요할 때마다 호출하여 해당작업을 반복해서 수행하기 때문에 코드를 재활용할 수있습니다.

1. 이름만 존재하는 함수
  -함수선언식
    function 함수명(){
      함수가 호출되었을때 실행할 문장;
      ...
    }
    함수명();
    -단순 코드 블록이라서 단독실행되지 않는다 그래서 함수명을 호출해야만이 실행
    -함수를 실행하기위해서 호출하는 자리는 함수선언식의 앞이나 뒤 어디든 위치할수 있다
----------------------------------------------------------------------------------------

  -함수표현식---->Emcascript5에서 함수 표현방식
    const 함수명 = function(){
     함수가 호출되었을때 실행할 문장;
      ...
   }
  함수명();
  
  -함수를 실행하기위해서 반드시 함수표현식 뒤에서 호출해야만 실행된다.


2. 매개변수가 있는 함수
  -함수 선언식
   
    function 함수명(매개변수1, 매개변수2.....){
       함수가 호출되었을때 실행할 문장;
      ...
    }

함수명(값1, 값2.....);


-함수 표현식
함수표현식---->Emcascript5에서 함수 표현방식
    const 함수명 = function(매개변수1, 매개변수2, ...){
     함수가 호출되었을때 실행할 문장;
      ...
}

함수명(값1, 값2...);


-디폴트 매개변수-
매개변수의 값을 정하지 않으면 대신 기본값을 변수 저장

-나머지 매개변수-
function 함수명(매개변수1, 매개변수, ...매개변수3){
    함수가 호출되었을때 실행할 문장;
      ...
}
함수명(10,20,30,40,50,60,70)
매개변수1 = 10;
매개변수2 = 20;
매개변수3 = [30,40,50,60,70]

3. 리턴값이 있는 함수

const func3 = (x, y) => {
    let sum = 0;
    for(let i=x; i<=y; i++){
        sum += i;
    }
    return sum;
}

화살표 함수로 표현
const func1 = () => console.log('안녕하세요, JavaScript!');