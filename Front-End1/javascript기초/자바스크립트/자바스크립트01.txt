
    
     

    
[자바스크립트의 시작]
    1995년 네스케이프 커뮤니케이션즈 사의 마크 안드레센이  DOM과 통신 할 수 있는 스크립트 언어를 필요로 하고 있었는데, 그 회사의 브렌던 아이크(Brendan Eich)가 처음에는 모카(Mocha)라는 이름으로, 나중에는 라이브스크립트(LiveScript)라는 이름으로 개발
    이후 자바로 유명한 썬 마이크로 시스템사의 계약을 통해 최종적으로 자바스크립트가 되었다.
    한편 MS사에서는 JScript라는 이름으로 독자적인 자바스크립트를 개발


    1996년부터 ECMA 인터네셔널이란 기관에서 자바스크립트의 표준화 작업을 맡게 되었고 
    이 때문에 자바스크립트의 정식명칭은 ECMAscript가 됨.
    1997년 ECMAscript 1 발표
    1998년 6월 ECMAscript 2 발표
    1999년 12월 ECMAscript 3 발표
    자바스크립트 표준 사양에 XMLHttpRequest라는 기능이 있는데 오늘 날 ajax의 주요 기술이 됨.

    ECMAscript 4- 플래시에서 쓰이는 Actionscript에서 채용. 폐기
    ECMAscript 5(2009)- 클래스 문법과 함수를 간단하게 정의할 수 있는 현대적인 프로그래밍 언어로 만들어 냄.
    ECMAscript 6-2015년 발표(ECMAscript 2015)
    ----------------중간생략--------------------------------------------------
    ECMAscript 10 (2019)




[자바스크립트 - 동적작업하는 언어]
     -웹의동작을 구현하기 위한 언어
     -웹브라우저에서 동작(node.js서버에서 작동)
       (Client-side에서 프로그래밍하는 스크립트)
     -html문서내에서 <script></script>태그안에서 작성
     -대소문자 구별
     -객체 기반의 스크립트언어(DOM형식을 채택)
     -웹브라우저에서 자바스크립트 엔진이 내장되어 있기 사용가능
       (독립적인응용프로그램의 형태를 지니지 못함)



[자바스크립트정의]
    <script> ~ </script>안에 정의한다.
    <script> ~ </script>의 위치는 
    <head>~</head>태그 또는 <body>~</body>태그에 모두 정의 가능. 


[변수 만드는 규칙]
     사용 가능한 문자는 영문자, 숫자, _(underbar, underscore)이다
     숫자로 시작할 수 없다.
     _(underbar , underscore)를 제외한 !, #, ?, $, @ 등과 같은 다른 특수문자는 올 수 없다.
     공백은 허용되지 않는다.
     자바스크립트 문법 안에서 규정한 예약어(키워드)는 변수로 사용할 수 없다.



[자바스크립트의 데이터 타입(형)]
타입이란 프로그램에서 다룰 수 있는 값의 종류를 의미

1. 숫자형(number)
자바스크립트는 다른 언어와 달리 정수와 실수를 따로 구분하지 않습니다. 모든 수를 실수 하나로만 표현합니다.

2. 문자열형(string)
자바스크립트는 문자열을 쌍따옴표, 따옴표로 둘러싸인 문자의 집합을 의미합니다.

const str1 = "류정원 : '여러분 오늘 자바스크립트 어땠나요?'";
const str2 = '류정원 : "여러분 오늘 자바스크립트 어땠나요?"';
const str3 = "류정원 : \"여러분 오늘 자바스크립트 어땠나요?\"";
const str4 = `자바스크립트에서는 문자열을 
    쌍따옴표, 따옴표로
    둘러싸인 문자의 집합을 의미합니다.`;
    

typeof() 함수
타입을 나타내는 문자열을 리턴합니다.


3. 불리언형(boolean)
참(true) 또는 거짓(false)으로 표현되는 값입니다.

const b1 = true;    // 값이 있으면 true
const b2 = false;   // 0, null, undefined

    
4. undefined, null 형
undefined : 타입이 정해지지 않은 것을 의미합니다. -> 변수 선언 후 값이 정해지지 않은 경우
null : 값이 정해지지 않은 것을 의미합니다. ->  null로 변수를 초기화 한 경우 -> object 타입



5. 객체형(object)
여러 속성을 하나의 변수에 저장할 수 있도록 해주는 데이터 타입입니다. -> key / value pair 구조

let student = {"name":"김사과", "age":20};
               --------------   --------
               key   :  value,  key  : value

