브라우저 위에서 동작하고있는 웹사이트나 웹 어플리케이선과 같은 클라이언트 들이 어떻게 서버와 통신할 수 있는지
정의한 것이 HTTP이다.

hTTp는 Hypertext Transfer Protocal의 약자로써, 어떻게 이 Hypertext를 서로 주고받을 수 있는지를 규약한 프로토콜의 하나

http는 클라이언트가 서버에게 요청하고 반대는 응답을 해준다.

Hypertext는 하이퍼링크 뿐만아니라 전반적으로 쓰이고 있는 리소스들 , 문서나 이미지를 다 포함해서 말함
http를 이용해서 서버에 데이터를 요청해서 받아올 수 있는 방법으로 AJAX를 썼었다.

Asynchronous JavaScript And XML의 약자이다. 웹페이지 에서 동적으로 서버에게 데이터를 주고 받을수 있는 기술을 의미함
대표적인 예로는 XHR라는 오브젝트가 있따.

XHR는 브라우저api에서 제공하는 오브젝트 중 하나로 이 오브젝트를 이용해면 간단하게 서버에게 데이터를 요청하고 받아 올 수 있따.
최근 브라우저 api에 추가된 fetch() API를 이용하면 간편하게 데이터를 주고받을수 있다.(무조건 신규로 추가되었다고 해서 함부로 사용할 수 없음.0)(아니면 요즘도 흔하게 많이 쓰이고 있는 XMLHttpRequest 라는 오브젝트를 이용하여 서버와 통신을 할 수 있음)

XML은 html과 같은 마크업 언어중 하나이다.

========================
요즘은 JSON을 더 많이 쓴다.
JSON은 JavaScript Object Notation의 약자로써 , 자바스크립트 오브젝트와 관련되어 있다.

브라우저 뿐만 아니라 모바일에서 서버와 데이터를 주고받을때 , 또는 서버와 통신을 하지 않아도 오브젝트와 filesystem에 저장할때도
JSON 데이터 타입을 많이 이용하고 있다.

1. 데이터를 주고받을떄 쓸수 있는 가장 간단한 format이다.
2. text를 기반으로해서 가볍다
3. 눈으로 읽기가 쉽다.
4. key-value로 이우러져 있ㄲ다
5. 데이터를 보통은 서버와 주고받을때 serilalization(직렬화)을 위해서 쓴다. 
★6. 프로그램 언어나, 플랫폼에 상관없이 사용 가능하다. ★ 

=========================================
공부 방법
object를 어떻게 직렬화 하여 string으로 변환할지
(그 반대도)

=====================================
웹사이트
JSON Diff => 서버에게 요청했을때 첫번째로 받아온 데이터와 두번째로 받아온 데이터의 차이를 알고싶을때
JSON Beautifier => 가끔 서버에서 받아온 json을 복사해서 붙여넣으면 format이 망가질때가 있음 그때 사용
JSON Parser => json타입을 Object형태로 보고싶을때
JSON Validator => 유효한 JSON 데이터인지 확일할 때




